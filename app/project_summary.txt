
Directory: .
------------
File: globals.css

--- Content of globals.css ---

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

--- End of globals.css ---
File: layout.tsx

--- Content of layout.tsx ---

import './globals.css'
import { Inter } from 'next/font/google'
import Navbar from './components/Navbar'
import Footer from './components/Footer'
import { AnimatePresence } from 'framer-motion'
import ScrollToTop from './components/ScrollToTop'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Aditya Glass & Aluminium',
  description: 'Premium glass frameworks for modern buildings and houses',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Navbar />
        <AnimatePresence mode="wait">
          <main>{children}</main>
        </AnimatePresence>
        <Footer />
        <ScrollToTop />
      </body>
    </html>
  )
}



--- End of layout.tsx ---
File: page.tsx

--- Content of page.tsx ---

import ParallaxHero from './components/ParallaxHero'
import Services from './components/Services'
import Portfolio from './components/Portfolio'
import Contact from './components/Contact'

export default function Home() {
  return (
    <>
      <ParallaxHero />
      <Services />
      <Portfolio />
      <Contact />
    </>
  )
}



--- End of page.tsx ---

Directory: components
---------------------
File: components\Contact.tsx

--- Content of components\Contact.tsx ---

'use client'

import { useState } from 'react'
import { motion } from 'framer-motion'
import { toast, ToastContainer } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css'

const Contact = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: '',
  })
  const [isSubmitting, setIsSubmitting] = useState(false)

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData((prevData) => ({ ...prevData, [name]: value }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 1500))
    console.log('Form submitted:', formData)
    toast.success('Message sent successfully!')
    setFormData({ name: '', email: '', message: '' })
    setIsSubmitting(false)
  }

  return (
    <section id="contact" className="py-20 bg-gray-100">
      <div className="container mx-auto px-4">
        <motion.h2 
          className="text-3xl font-bold text-center mb-12"
          initial={{ opacity: 0, y: -20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          viewport={{ once: true }}
        >
          Contact Us
        </motion.h2>
        <motion.div 
          className="max-w-3xl mx-auto"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, delay: 0.2 }}
          viewport={{ once: true }}
        >
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label htmlFor="name" className="block text-sm font-medium text-gray-700">
                Name
              </label>
              <input
                type="text"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleChange}
                required
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
              />
            </div>
            <div>
              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
                Email
              </label>
              <input
                type="email"
                id="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                required
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
              />
            </div>
            <div>
              <label htmlFor="message" className="block text-sm font-medium text-gray-700">
                Message
              </label>
              <textarea
                id="message"
                name="message"
                value={formData.message}
                onChange={handleChange}
                required
                rows={4}
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
              ></textarea>
            </div>
            <div>
              <motion.button
                type="submit"
                className="w-full bg-indigo-600 text-white font-bold py-3 px-4 rounded-md hover:bg-indigo-700 transition duration-300"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                disabled={isSubmitting}
              >
                {isSubmitting ? 'Sending...' : 'Send Message'}
              </motion.button>
            </div>
          </form>
        </motion.div>
      </div>
      <ToastContainer position="bottom-right" />
    </section>
  )
}

export default Contact



--- End of components\Contact.tsx ---
File: components\Footer.tsx

--- Content of components\Footer.tsx ---

const Footer = () => {
              return (
                <footer className="bg-gray-800 text-white py-8">
                  <div className="container mx-auto px-4">
                    <div className="flex flex-wrap justify-between items-center">
                      <div className="w-full md:w-1/3 text-center md:text-left mb-4 md:mb-0">
                        <h3 className="text-2xl font-bold">Aditya Glass & Aluminium</h3>
                        <p className="mt-2">Transforming spaces with premium glass solutions</p>
                      </div>
                      <div className="w-full md:w-1/3 text-center mb-4 md:mb-0">
                        <h4 className="text-lg font-semibold mb-2">Contact</h4>
                        <p>Email: info@adityaglass.com</p>
                        <p>Phone: +91 123 456 7890</p>
                      </div>
                      <div className="w-full md:w-1/3 text-center md:text-right">
                        <h4 className="text-lg font-semibold mb-2">Follow Us</h4>
                        <div className="flex justify-center md:justify-end space-x-4">
                          <a href="#" className="hover:text-gray-400 transition duration-300">Facebook</a>
                          <a href="#" className="hover:text-gray-400 transition duration-300">Twitter</a>
                          <a href="#" className="hover:text-gray-400 transition duration-300">Instagram</a>
                        </div>
                      </div>
                    </div>
                    <div className="mt-8 text-center">
                      <p>&copy; 2023 Aditya Glass & Aluminium. All rights reserved.</p>
                    </div>
                  </div>
                </footer>
              )
            }
            
export default Footer; // Ensure this line is present


--- End of components\Footer.tsx ---
File: components\Hero.tsx

--- Content of components\Hero.tsx ---

import Image from 'next/image'
import { motion } from 'framer-motion'

const Hero = () => {
  return (
    <div className="relative h-screen">
      <Image
        src="/placeholder.svg?height=1080&width=1920"
        alt="Modern glass building"
        layout="fill"
        objectFit="cover"
        quality={100}
      />
      <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <div className="text-center">
          <motion.h1 
            className="text-4xl sm:text-5xl md:text-6xl font-bold text-white mb-4"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
          >
            Aditya Glass & Aluminium
          </motion.h1>
          <motion.p 
            className="text-xl sm:text-2xl md:text-3xl text-white mb-8"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, delay: 0.2 }}
          >
            Transforming spaces with premium glass solutions
          </motion.p>
          <motion.a
            href="#contact"
            className="bg-white text-gray-800 font-bold py-3 px-8 rounded-full text-lg hover:bg-gray-200 transition duration-300"
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5, delay: 0.4 }}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            Get a Quote
          </motion.a>
        </div>
      </div>
    </div>
  )
}

export default Hero



--- End of components\Hero.tsx ---
File: components\Navbar.tsx

--- Content of components\Navbar.tsx ---

'use client'

import { useState } from 'react'
import Link from 'next/link'
import { Menu, X } from 'lucide-react'
import { motion, AnimatePresence } from 'framer-motion'
import { useScrollPosition } from '../hooks/useScrollPosition'

const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false)
  const scrollPosition = useScrollPosition()

  return (
    <motion.nav 
      className={`fixed w-full z-50 transition-all duration-300 ${scrollPosition > 50 ? 'bg-white shadow-lg' : 'bg-transparent'}`}
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      transition={{ duration: 0.5 }}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          <div className="flex items-center">
            <Link href="/" className={`text-xl font-bold ${scrollPosition > 50 ? 'text-gray-800' : 'text-white'}`}>
              Aditya Glass & Aluminium
            </Link>
          </div>
          <div className="hidden md:block">
            <div className="ml-10 flex items-baseline space-x-4">
              {['Home', 'Services', 'Portfolio', 'Contact'].map((item) => (
                <Link 
                  key={item}
                  href={item === 'Home' ? '/' : `#${item.toLowerCase()}`} 
                  className={`${scrollPosition > 50 ? 'text-gray-600 hover:text-gray-900' : 'text-white hover:text-gray-300'} px-3 py-2 rounded-md text-sm font-medium`}
                >
                  {item}
                </Link>
              ))}
            </div>
          </div>
          <div className="md:hidden">
            <button
              onClick={() => setIsOpen(!isOpen)}
              className={`inline-flex items-center justify-center p-2 rounded-md ${scrollPosition > 50 ? 'text-gray-400 hover:text-gray-500 hover:bg-gray-100' : 'text-white hover:text-gray-300 hover:bg-gray-700'} focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white`}
            >
              {isOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
            </button>
          </div>
        </div>
      </div>
      <AnimatePresence>
        {isOpen && (
          <motion.div 
            className="md:hidden"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ duration: 0.2 }}
          >
            <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white shadow-lg">
              {['Home', 'Services', 'Portfolio', 'Contact'].map((item) => (
                <Link
                  key={item}
                  href={item === 'Home' ? '/' : `#${item.toLowerCase()}`}
                  className="text-gray-600 hover:text-gray-900 block px-3 py-2 rounded-md text-base font-medium"
                  onClick={() => setIsOpen(false)}
                >
                  {item}
                </Link>
              ))}
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.nav>
  )
}

export default Navbar; // Ensure this line is present



--- End of components\Navbar.tsx ---
File: components\ParallaxHero.tsx

--- Content of components\ParallaxHero.tsx ---

'use client'

import { useEffect, useState } from 'react'
import Image from 'next/image'
import { motion, useScroll, useTransform } from 'framer-motion'
import { ReactTyped } from 'react-typed'; // Note the named import

const ParallaxHero = () => {
  const [windowHeight, setWindowHeight] = useState(0)
  const { scrollY } = useScroll()
  const y = useTransform(scrollY, [0, windowHeight], [0, windowHeight * 0.5])

  useEffect(() => {
    setWindowHeight(window.innerHeight)
  }, [])

  return (
    <div className="relative h-screen overflow-hidden">
      <motion.div style={{ y }} className="absolute inset-0">
        <Image
          src="/placeholder.svg"
          alt="Modern glass building"
          layout="fill"
          objectFit="cover"
          quality={100}
        />
      </motion.div>
      <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <div className="text-center">
          <motion.h1 
            className="text-4xl sm:text-5xl md:text-6xl font-bold text-white mb-4"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
          >
            Aditya Glass & Aluminium
          </motion.h1>
          <ReactTyped
            strings={['Transforming spaces with premium glass solutions']}
            typeSpeed={40}
            backSpeed={50}
            loop
            className="text-xl sm:text-2xl md:text-3xl text-white mb-8 h-[40px] sm:h-[60px] md:h-[80px] flex items-center justify-center"
          />
          <motion.a
            href="#contact"
            className="bg-white text-gray-800 font-bold py-3 px-8 rounded-full text-lg hover:bg-gray-200 transition duration-300"
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5, delay: 0.4 }}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            Get a Quote
          </motion.a>
        </div>
      </div>
    </div>
  )
}

export default ParallaxHero



--- End of components\ParallaxHero.tsx ---
File: components\Portfolio.tsx

--- Content of components\Portfolio.tsx ---

'use client'

import Image from 'next/image'
import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { X } from 'lucide-react'

const projects = [
  { id: 1, title: 'Modern Office Building', image: '/placeholder.svg' },
  { id: 2, title: 'Luxury Residence', image: '/placeholder.svg' },
  { id: 3, title: 'Shopping Mall', image: '/placeholder.svg' },
  { id: 4, title: 'Hotel Facade', image: '/placeholder.svg' },
]

const Portfolio = () => {
  const [selectedProject, setSelectedProject] = useState<number | null>(null)

  return (
    <section id="portfolio" className="py-20">
      <div className="container mx-auto px-4">
        <motion.h2 
          className="text-3xl font-bold text-center mb-12"
          initial={{ opacity: 0, y: -20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          viewport={{ once: true }}
        >
          Our Portfolio
        </motion.h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {projects.map((project) => (
            <motion.div 
              key={project.id} 
              className="relative group cursor-pointer"
              initial={{ opacity: 0, scale: 0.9 }}
              whileInView={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.5 }}
              viewport={{ once: true }}
              whileHover={{ scale: 1.05 }}
              onClick={() => setSelectedProject(project.id)}
            >
              <Image
                src={project.image}
                alt={project.title}
                width={800}
                height={600}
                className="rounded-lg shadow-md transition duration-300 group-hover:opacity-75"
              />
              <div className="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition duration-300">
                <h3 className="text-white text-xl font-semibold text-center bg-black bg-opacity-50 p-4 rounded">
                  {project.title}
                </h3>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
      <AnimatePresence>
        {selectedProject !== null && (
          <motion.div 
            className="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
          >
            <motion.div 
              className="bg-white p-4 rounded-lg max-w-3xl w-full mx-4"
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
            >
              <div className="flex justify-between items-center mb-4">
                <h3 className="text-2xl font-bold">{projects[selectedProject - 1].title}</h3>
                <button onClick={() => setSelectedProject(null)} className="text-gray-500 hover:text-gray-700">
                  <X size={24} />
                </button>
              </div>
              <Image
                src={projects[selectedProject - 1].image}
                alt={projects[selectedProject - 1].title}
                width={1600}
                height={1200}
                className="rounded-lg"
              />
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </section>
  )
}

export default Portfolio



--- End of components\Portfolio.tsx ---
File: components\ScrollToTop.tsx

--- Content of components\ScrollToTop.tsx ---

'use client'

import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { ArrowUp } from 'lucide-react'

const ScrollToTop = () => {
  const [isVisible, setIsVisible] = useState(false)

  useEffect(() => {
    const toggleVisibility = () => {
      if (window.pageYOffset > 300) {
        setIsVisible(true)
      } else {
        setIsVisible(false)
      }
    }

    window.addEventListener('scroll', toggleVisibility)

    return () => window.removeEventListener('scroll', toggleVisibility)
  }, [])

  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    })
  }

  return (
    <AnimatePresence>
      {isVisible && (
        <motion.button
          onClick={scrollToTop}
          className="fixed bottom-4 right-4 p-2 bg-indigo-600 text-white rounded-full shadow-lg"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0, y: 20 }}
          whileHover={{ scale: 1.1 }}
          whileTap={{ scale: 0.9 }}
        >
          <ArrowUp size={24} />
        </motion.button>
      )}
    </AnimatePresence>
  )
}

export default ScrollToTop

--- End of components\ScrollToTop.tsx ---
File: components\Services.tsx

--- Content of components\Services.tsx ---

'use client'

import { motion } from 'framer-motion'

const services = [
  {
    title: 'Glass Facades',
    description: 'Modern glass facades for commercial buildings and skyscrapers.',
    icon: '🏢',
  },
  {
    title: 'Residential Windows',
    description: 'Energy-efficient and stylish windows for modern homes.',
    icon: '🏠',
  },
  {
    title: 'Interior Glass',
    description: 'Elegant glass partitions and doors for office spaces.',
    icon: '🚪',
  },
  {
    title: 'Custom Solutions',
    description: 'Bespoke glass designs for unique architectural requirements.',
    icon: '✨',
  },
]

const Services = () => {
  return (
    <section id="services" className="py-20 bg-gray-100">
      <div className="container mx-auto px-4">
        <motion.h2 
          className="text-3xl font-bold text-center mb-12"
          initial={{ opacity: 0, y: -20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          viewport={{ once: true }}
        >
          Our Services
        </motion.h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {services.map((service, index) => (
            <motion.div 
              key={index} 
              className="bg-white p-6 rounded-lg shadow-md"
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              viewport={{ once: true }}
              whileHover={{ scale: 1.05 }}
            >
              <div className="text-4xl mb-4">{service.icon}</div>
              <h3 className="text-xl font-semibold mb-2">{service.title}</h3>
              <p className="text-gray-600">{service.description}</p>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  )
}

export default Services



--- End of components\Services.tsx ---

Directory: hooks
----------------
File: hooks\useScrollPosition.ts

--- Content of hooks\useScrollPosition.ts ---

import { useState, useEffect } from 'react'

export function useScrollPosition() {
  const [scrollPosition, setScrollPosition] = useState(0)

  useEffect(() => {
    const updatePosition = () => {
      setScrollPosition(window.pageYOffset)
    }

    window.addEventListener("scroll", updatePosition)
    updatePosition()

    return () => window.removeEventListener("scroll", updatePosition)
  }, [])

  return scrollPosition
}

--- End of hooks\useScrollPosition.ts ---
